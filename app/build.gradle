apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}


android {
    compileSdkVersion compile_sdk.toInteger()
    buildToolsVersion build_tools

    def Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())


    defaultConfig {
        applicationId "com.codefororlando.petadoption"
        minSdkVersion 15
        targetSdkVersion target_sdk.toInteger()
        versionCode version_code.toInteger()
        versionName version_name
        buildConfigField "String", "PETFINDER_API_KEY", properties.getProperty("petfinder.api.key", "")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "api"

    productFlavors {
        petAdoption {
            applicationIdSuffix ".petAdoption"
            versionNameSuffix "-petAdoption"
            dimension "api"
        }
        petFinder {
            applicationIdSuffix ".petFinder"
            versionNameSuffix "-petFinder"
            dimension "api"
        }
    }
    buildToolsVersion '26.0.2'
}

dependencies {
    // Android Support
    implementation supportAppCompat
    implementation supportGridLayout
    implementation supportRecyclerView
    implementation supportDesign
    implementation constraintLayout

    // Dagger
    implementation dagger
    annotationProcessor daggerApt
    provided jsr250

    // MVP
    implementation (nucleus) {
        exclude group: 'io.reactivex'
    }
    implementation (nucleusSupport) {
        exclude group: 'io.reactivex'
    }

    // Networking
    implementation picasso
    implementation retrofit
    implementation retrofitAdapter

    // RX
    implementation rxJava
    implementation rxAndroid

    // LoganSquare
    annotationProcessor loganSquareApt
    implementation loganSquare
    implementation loganSquareRetrofit

    // Logging
    implementation timber

    // Leak Canary
    debugImplementation leakCanaryDebug
//    releaseCompile leakCanaryRelease

    // Misc
    implementation versions
}
