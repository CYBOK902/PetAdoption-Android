apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion compile_sdk.toInteger()
    buildToolsVersion build_tools

    def Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())


    defaultConfig {
        applicationId "com.codefororlando.petadoption"
        minSdkVersion 15
        targetSdkVersion target_sdk.toInteger()
        versionCode version_code.toInteger()
        versionName version_name
        buildConfigField "String", "API_KEY", properties.getProperty("api.key", "")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        petAdoption {
            applicationIdSuffix ".petAdoption"
            versionNameSuffix "-petAdoption"
        }
        petFinder {
            applicationIdSuffix ".petFinder"
            versionNameSuffix "-petFinder"
        }
    }
}

dependencies {
    // Android Support
    compile supportAppCompat
    compile supportGridLayout
    compile supportRecyclerView
    compile supportDesign
    compile constraintLayout

    // Dagger
    compile dagger
    apt daggerApt
    provided jsr250

    // MVP
    compile (nucleus) {
        exclude group: 'io.reactivex'
    }
    compile (nucleusSupport) {
        exclude group: 'io.reactivex'
    }

    // Networking
    compile picasso
    compile retrofit
    compile retrofitAdapter

    // RX
    compile rxJava
    compile rxAndroid

    // LoganSquare
    apt loganSquareApt
    compile loganSquare
    compile loganSquareRetrofit

    // Logging
    compile timber

    // Leak Canary
    debugCompile leakCanaryDebug
    releaseCompile leakCanaryRelease

    // Misc
    compile versions
}
